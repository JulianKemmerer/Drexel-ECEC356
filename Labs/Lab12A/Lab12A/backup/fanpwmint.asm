;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: FanPWMINT.asm
;;   Version: 2.5, Updated on 2010/6/8 at 12:37:18
;;  Generated by PSoC Designer 5.1.2110.0
;;
;;  DESCRIPTION: PWM8 Interrupt Service Routine
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2010. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"
include "FanPWM.inc"
include "memory.inc"


;-----------------------------------------------
;  Global Symbols
;-----------------------------------------------
export  _FanPWM_ISR


AREA InterruptRAM (RAM,REL,CON)

;@PSoC_UserCode_INIT@ (Do not change this line.)
;---------------------------------------------------
; Insert your custom declarations below this banner
;---------------------------------------------------

;------------------------
; Includes
;------------------------

	
;------------------------
;  Constant Definitions
;------------------------


;------------------------
; Variable Allocation
;------------------------


;---------------------------------------------------
; Insert your custom declarations above this banner
;---------------------------------------------------
;@PSoC_UserCode_END@ (Do not change this line.)


AREA UserModules (ROM, REL)

;-----------------------------------------------------------------------------
;  FUNCTION NAME: _FanPWM_ISR
;
;  DESCRIPTION: Unless modified, this implements only a null handler stub.
;
;-----------------------------------------------------------------------------
;

_FanPWM_ISR:

   ;@PSoC_UserCode_BODY@ (Do not change this line.)
   ;---------------------------------------------------
   ; Insert your custom code below this banner
   ;---------------------------------------------------
   ;   NOTE: interrupt service routines must preserve
   ;   the values of the A and X CPU registers.


	RDIxLT0: equ 0xb3
		dec [_wControlState+1]
		sbb [_wControlState],0
		jnz MoreThan255
		cmp [_wControlState+1],20
		jnz Not20
	State20:
		mov reg[PRT1DR],0x40	; Override on
		or 	reg[RDIxLT0],0x0f   ; LUT
		reti
	Not20:
		cmp [_wControlState+1],0
		jnz NotZero
	State0:
		mov reg[PRT1DR],0x00 	; Override off
		and reg[RDIxLT0],0xf3	; LUT
		mov [_wControlState],3
		mov [_wControlState+1],232
		reti
	NotZero:
		cmp [_wControlState+1],19
		jnz Not19
		mov [_cNumCycles],-1
		and reg[INT_CLR1],0xcf
		call TachTimer_EnableInt
	Not19:		
		cmp [_wControlState+1],1
		jnz Not1
		and reg[INT_CLR1],0xcf
		call TachTimer_DisableInt
		mov [_bDataAvailable],1
	Not1:	
	MoreThan255:



;	RDIxLT0: equ 0xb3
;		dec [_wControlState+1]
;		sbb [_wControlState],0
;		jnz MoreThan255
;		cmp [_wControlState+1],60
;		jnz Not60
;	State60:
;		mov reg[PRT1DR],0x40	; Override on
;		or 	reg[RDIxLT0],0x0f   ; LUT
;		reti
;	Not60:
;		cmp [_wControlState+1],0
;		jnz NotZero
;	State0:
;		mov reg[PRT1DR],0x00 	; Override off
;		and reg[RDIxLT0],0xf3	; LUT
;		mov [_wControlState],3
;		mov [_wControlState+1],232
;		reti
;	NotZero:
;		cmp [_wControlState+1],59
;		jnz Not59
;		mov [_cNumCycles],-1
;		and reg[INT_CLR1],0xcf
;		call TachTimer_EnableInt
;	Not59:		
;		cmp [_wControlState+1],1
;		jnz Not1
;		and reg[INT_CLR1],0xcf
;		call TachTimer_DisableInt
;		mov [_bDataAvailable],1
;	Not1:	
;	MoreThan255:
	
	

   ;---------------------------------------------------
   ; Insert your custom code above this banner
   ;---------------------------------------------------
   ;@PSoC_UserCode_END@ (Do not change this line.)

   reti


; end of file FanPWMINT.asm
