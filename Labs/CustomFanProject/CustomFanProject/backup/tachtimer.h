//*****************************************************************************
//*****************************************************************************
//  FILENAME: TachTimer.h
//   Version: 2.6, Updated on 2011/3/29 at 14:31:11
//  Generated by PSoC Designer 5.1.2110.0
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2011. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef TachTimer_INCLUDE
#define TachTimer_INCLUDE

#include <m8c.h>

#pragma fastcall16 TachTimer_EnableInt
#pragma fastcall16 TachTimer_DisableInt
#pragma fastcall16 TachTimer_Start
#pragma fastcall16 TachTimer_Stop
#pragma fastcall16 TachTimer_wReadTimer                // Read  DR0
#pragma fastcall16 TachTimer_wReadTimerSaveCV          // Read  DR0      
#pragma fastcall16 TachTimer_WritePeriod               // Write DR1
#pragma fastcall16 TachTimer_wReadCompareValue         // Read  DR2
#pragma fastcall16 TachTimer_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wTachTimer_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 wTachTimer_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 wTachTimer_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 wTachTimer_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 wTachTimer_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the TachTimer API.
//-------------------------------------------------

extern void TachTimer_EnableInt(void);                           // Proxy 1
extern void TachTimer_DisableInt(void);                          // Proxy 1
extern void TachTimer_Start(void);                               // Proxy 1
extern void TachTimer_Stop(void);                                // Proxy 1
extern WORD TachTimer_wReadTimer(void);                          // Proxy 1
extern WORD TachTimer_wReadTimerSaveCV(void);                    // Proxy 2
extern void TachTimer_WritePeriod(WORD wPeriod);                 // Proxy 1
extern WORD TachTimer_wReadCompareValue(void);                   // Proxy 1
extern void TachTimer_WriteCompareValue(WORD wCompareValue);     // Proxy 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wTachTimer_ReadCompareValue(void);       // Deprecated
extern WORD wTachTimer_ReadTimerSaveCV(void);        // Deprecated
extern WORD wTachTimer_ReadCounter(void);            // Obsolete
extern WORD wTachTimer_ReadTimer(void);              // Deprecated
extern WORD wTachTimer_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for TachTimer API's.
//--------------------------------------------------

#define TachTimer_CONTROL_REG_START_BIT        ( 0x01 )
#define TachTimer_INT_REG_ADDR                 ( 0x0e1 )
#define TachTimer_INT_MASK                     ( 0x20 )


//--------------------------------------------------
// Constants for TachTimer user defined values
//--------------------------------------------------

#define TachTimer_PERIOD                       ( 0xffff )
#define TachTimer_COMPARE_VALUE                ( 0x0 )


//-------------------------------------------------
// Register Addresses for TachTimer
//-------------------------------------------------

#pragma ioport  TachTimer_COUNTER_LSB_REG:  0x030          //Count register LSB
BYTE            TachTimer_COUNTER_LSB_REG;
#pragma ioport  TachTimer_COUNTER_MSB_REG:  0x034          //Count register MSB
BYTE            TachTimer_COUNTER_MSB_REG;
#pragma ioport  TachTimer_PERIOD_LSB_REG:   0x031          //Period register LSB
BYTE            TachTimer_PERIOD_LSB_REG;
#pragma ioport  TachTimer_PERIOD_MSB_REG:   0x035          //Period register MSB
BYTE            TachTimer_PERIOD_MSB_REG;
#pragma ioport  TachTimer_COMPARE_LSB_REG:  0x032          //Compare register LSB
BYTE            TachTimer_COMPARE_LSB_REG;
#pragma ioport  TachTimer_COMPARE_MSB_REG:  0x036          //Compare register MSB
BYTE            TachTimer_COMPARE_MSB_REG;
#pragma ioport  TachTimer_CONTROL_LSB_REG:  0x033          //Control register LSB
BYTE            TachTimer_CONTROL_LSB_REG;
#pragma ioport  TachTimer_CONTROL_MSB_REG:  0x037          //Control register MSB
BYTE            TachTimer_CONTROL_MSB_REG;
#pragma ioport  TachTimer_FUNC_LSB_REG: 0x130              //Function register LSB
BYTE            TachTimer_FUNC_LSB_REG;
#pragma ioport  TachTimer_FUNC_MSB_REG: 0x134              //Function register MSB
BYTE            TachTimer_FUNC_MSB_REG;
#pragma ioport  TachTimer_INPUT_LSB_REG:    0x131          //Input register LSB
BYTE            TachTimer_INPUT_LSB_REG;
#pragma ioport  TachTimer_INPUT_MSB_REG:    0x135          //Input register MSB
BYTE            TachTimer_INPUT_MSB_REG;
#pragma ioport  TachTimer_OUTPUT_LSB_REG:   0x132          //Output register LSB
BYTE            TachTimer_OUTPUT_LSB_REG;
#pragma ioport  TachTimer_OUTPUT_MSB_REG:   0x136          //Output register MSB
BYTE            TachTimer_OUTPUT_MSB_REG;
#pragma ioport  TachTimer_INT_REG:       0x0e1             //Interrupt Mask Register
BYTE            TachTimer_INT_REG;


//-------------------------------------------------
// TachTimer Macro 'Functions'
//-------------------------------------------------

#define TachTimer_Start_M \
   ( TachTimer_CONTROL_LSB_REG |=  TachTimer_CONTROL_REG_START_BIT )

#define TachTimer_Stop_M  \
   ( TachTimer_CONTROL_LSB_REG &= ~TachTimer_CONTROL_REG_START_BIT )

#define TachTimer_EnableInt_M   \
   M8C_EnableIntMask(  TachTimer_INT_REG, TachTimer_INT_MASK )

#define TachTimer_DisableInt_M  \
   M8C_DisableIntMask( TachTimer_INT_REG, TachTimer_INT_MASK )

#endif
// end of file TachTimer.h
