//*****************************************************************************
//*****************************************************************************
//  FILENAME: Timer.h
//   Version: 2.6, Updated on 2011/3/29 at 14:31:11
//  Generated by PSoC Designer 5.1.2110.0
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2011. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Timer_INCLUDE
#define Timer_INCLUDE

#include <m8c.h>

#pragma fastcall16 Timer_EnableInt
#pragma fastcall16 Timer_DisableInt
#pragma fastcall16 Timer_Start
#pragma fastcall16 Timer_Stop
#pragma fastcall16 Timer_wReadTimer                // Read  DR0
#pragma fastcall16 Timer_wReadTimerSaveCV          // Read  DR0      
#pragma fastcall16 Timer_WritePeriod               // Write DR1
#pragma fastcall16 Timer_wReadCompareValue         // Read  DR2
#pragma fastcall16 Timer_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wTimer_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 wTimer_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 wTimer_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 wTimer_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 wTimer_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Timer API.
//-------------------------------------------------

extern void Timer_EnableInt(void);                           // Proxy 1
extern void Timer_DisableInt(void);                          // Proxy 1
extern void Timer_Start(void);                               // Proxy 1
extern void Timer_Stop(void);                                // Proxy 1
extern WORD Timer_wReadTimer(void);                          // Proxy 1
extern WORD Timer_wReadTimerSaveCV(void);                    // Proxy 2
extern void Timer_WritePeriod(WORD wPeriod);                 // Proxy 1
extern WORD Timer_wReadCompareValue(void);                   // Proxy 1
extern void Timer_WriteCompareValue(WORD wCompareValue);     // Proxy 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wTimer_ReadCompareValue(void);       // Deprecated
extern WORD wTimer_ReadTimerSaveCV(void);        // Deprecated
extern WORD wTimer_ReadCounter(void);            // Obsolete
extern WORD wTimer_ReadTimer(void);              // Deprecated
extern WORD wTimer_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for Timer API's.
//--------------------------------------------------

#define Timer_CONTROL_REG_START_BIT            ( 0x01 )
#define Timer_INT_REG_ADDR                     ( 0x0e1 )
#define Timer_INT_MASK                         ( 0x02 )


//--------------------------------------------------
// Constants for Timer user defined values
//--------------------------------------------------

#define Timer_PERIOD                           ( 0xffff )
#define Timer_COMPARE_VALUE                    ( 0x0 )


//-------------------------------------------------
// Register Addresses for Timer
//-------------------------------------------------

#pragma ioport  Timer_COUNTER_LSB_REG:  0x020              //Count register LSB
BYTE            Timer_COUNTER_LSB_REG;
#pragma ioport  Timer_COUNTER_MSB_REG:  0x024              //Count register MSB
BYTE            Timer_COUNTER_MSB_REG;
#pragma ioport  Timer_PERIOD_LSB_REG:   0x021              //Period register LSB
BYTE            Timer_PERIOD_LSB_REG;
#pragma ioport  Timer_PERIOD_MSB_REG:   0x025              //Period register MSB
BYTE            Timer_PERIOD_MSB_REG;
#pragma ioport  Timer_COMPARE_LSB_REG:  0x022              //Compare register LSB
BYTE            Timer_COMPARE_LSB_REG;
#pragma ioport  Timer_COMPARE_MSB_REG:  0x026              //Compare register MSB
BYTE            Timer_COMPARE_MSB_REG;
#pragma ioport  Timer_CONTROL_LSB_REG:  0x023              //Control register LSB
BYTE            Timer_CONTROL_LSB_REG;
#pragma ioport  Timer_CONTROL_MSB_REG:  0x027              //Control register MSB
BYTE            Timer_CONTROL_MSB_REG;
#pragma ioport  Timer_FUNC_LSB_REG: 0x120                  //Function register LSB
BYTE            Timer_FUNC_LSB_REG;
#pragma ioport  Timer_FUNC_MSB_REG: 0x124                  //Function register MSB
BYTE            Timer_FUNC_MSB_REG;
#pragma ioport  Timer_INPUT_LSB_REG:    0x121              //Input register LSB
BYTE            Timer_INPUT_LSB_REG;
#pragma ioport  Timer_INPUT_MSB_REG:    0x125              //Input register MSB
BYTE            Timer_INPUT_MSB_REG;
#pragma ioport  Timer_OUTPUT_LSB_REG:   0x122              //Output register LSB
BYTE            Timer_OUTPUT_LSB_REG;
#pragma ioport  Timer_OUTPUT_MSB_REG:   0x126              //Output register MSB
BYTE            Timer_OUTPUT_MSB_REG;
#pragma ioport  Timer_INT_REG:       0x0e1                 //Interrupt Mask Register
BYTE            Timer_INT_REG;


//-------------------------------------------------
// Timer Macro 'Functions'
//-------------------------------------------------

#define Timer_Start_M \
   ( Timer_CONTROL_LSB_REG |=  Timer_CONTROL_REG_START_BIT )

#define Timer_Stop_M  \
   ( Timer_CONTROL_LSB_REG &= ~Timer_CONTROL_REG_START_BIT )

#define Timer_EnableInt_M   \
   M8C_EnableIntMask(  Timer_INT_REG, Timer_INT_MASK )

#define Timer_DisableInt_M  \
   M8C_DisableIntMask( Timer_INT_REG, Timer_INT_MASK )

#endif
// end of file Timer.h
